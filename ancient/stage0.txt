i u u..
k u u i...
s u k..
b s k s.. k..
c s s k s.. s k k.. s... k k...
i i.
k k.
s s.
b b.
c c.
m s i. i..
y b m. c b. s i. i....
True k.
True_Dispatch b c. c i...
False k i..
False_Dispatch c b c. c i....
Bool_ID c c i. 0.. 1..
if i.
not c c i. False.. True..
and c c. False..
or c i. True..
implies c c. True..
xor c b s. c b b. if.. not... i..
eq b b not.. xor..
Zero k.
Zero_Dispatch c b b. b c. c i.... k..
Succ b k. c i...
Succ_Dispatch c b c. c i....
Nat_ID c c i. 0.. k 1...
one Succ Zero..
add y b s b c. c i.... c b. Succ....
mul y b b c c i. Zero.... s b b. add.....
pow y b b c c i. one.... s b b. mul.....
isZero c c i. True.. k False...
pred c c i. Zero.. i..
sub y b s b s. c b if. isZero..... c b c. b b b.. c b. pred.... pred....
Pair b c. c i...
Pair_Dispatch b k. c i...
Pair_ID c i. k k 0....
fst c i. k..
snd c i. k i...
changeFst c b. b Pair...
changeSnd c b. c b b. Pair....
isEQ s b s. b b and.. b b isZero.. sub.... b b isZero.. c sub....
isLTE b b isZero.. sub..
isGTE c isLTE..
isLT b b not.. isGTE..
isGT b b not.. isLTE..
min c b s. s b c. b b if.. isLT... i... i..
max c b s. s b c. b b if.. isGT... i... i..
mod y b s b s. s b c. b b if.. isLT... i.... c b c. b b s.. c b b. b.. sub.... i....
div y b s b s. c b c. b b if.. isLT... Zero.... b b b Succ... c b c. b b s.. c b b. b.. sub.... i.....
ListEmpty k.
ListEmpty_Dispatch c b b. b c. c i.... b k. k...
ListCons b b k.. b c. c i....
ListCons_Dispatch c b c. c i....
List_ID c c i. 0.. k k 1....
listAddFront c ListCons..
listIsEmpty c c i. True.. k k False....
listIsNotEmpty b not. listIsEmpty..
listHead c c i. i.. k..
listTail c c i. i.. k i...
foldl y b c b s. b b.... c b c. b b s.. b b b c... b b b b c.... c b b. b b. b b. c.... c i....... i....
foldr y b c b s. b b.... b b b c... b b s b... b b c.. c......
reverseBag y b c s.. c b b. b b. c... c ListCons.....
reverse c reverseBag. ListEmpty..
unfold y b s b b. ListCons... c b c. b b s.. c b b. b.. c i..... i....
repeat c unfold. i..
listConcat c b c. foldr.. listAddFront..
listReturn listAddFront ListEmpty..
listAddBack c b b. listConcat.. listReturn..
cfold y b b s b b. ListCons.... b c b b. b b. c i. ListEmpty..... c b c. b b s.. b b b c... b b b b c.... c b b. b b. b b. c.... c i....... i.....
listTake y b c b b. c i. ListEmpty.... b c b b. b b. c i. ListEmpty..... c b b. b b. ListCons.......
listTakeWhile y b c b b. c i. ListEmpty.... b s b s. b b b.. c b c. b b if.. b not.... ListEmpty..... b b c b b. ListCons.... c.....
listBind c b b. c foldl. ListEmpty... c b b. listConcat....
listMap c b b. listBind.. b listReturn...
listWhere c b b. c foldr. ListEmpty... c b s. b b c.. c b b. b s. b if.... c ListCons..... i...
listSkip y b s b b. c i. ListEmpty.... b b b k... c b c. b b b.. c i........
listSkipWhile y b s b b. c i. ListEmpty.... b c b s. b b c.. b b b b... c b c. b b if.. b not......... c....
listAny b b not.. b b listIsEmpty.. listWhere...
listAll b b not.. c b b. listAny.. b not....
ors c listAny. i..
ands c listAll. i..
listCount c c foldl. Zero.. b k. Succ...
listZip y b c b b. b b. c i. ListEmpty..... b c b b. b b. b b. c i. ListEmpty...... b s b c. b b b.. b b c.. b b b b... b b ListCons........ b c. b c.......
listZipLonger y b s b s. b b s.. b b b s... c b b. b b. b... c b b. b b. listMap... c i........ b c b c. b b s.. b b b s... b b b b b.... b b b b b.... b c b b. b... c b b. b b. listMap... c c.......... b b s b c. b b b.. b b c.. b b b b... b b ListCons......... b b c.. b b b c... b c. b c.........
listEquals b s b s. b b and.. c b b. b isEQ. listCount... listCount..... c b c. b b c.. b b b listAll... c b c. listZip...... i...
strEquals listEquals isEQ..
listMerge y b b s s... b b s b s. b b b.. b b b.. c i....... b b b b b b b k....... s b s. b b s.. b b b c... b b b b c.... b b b b b c..... b b b b b b s...... b b c b b. b s. b b b.. b b c.. b b if......... b b b c b b. ListCons..... b c.......... b b s ListCons.........
listSort y c b c. b b s.. b b s b if. c b isGT. listCount.. 1..... c b c. b b s.. s b s. b b s.. b b b s... b s b b. b b. listMerge.... c b c. b b b.. b b.... listTake...... c b c. b b b.. b b.... listSkip..... c b div. listCount.. 2...... i...
intSort listSort isLT..
listElementAt b b listHead.. listSkip..
listStartsWith c b c. b b s.. c b b. b b. listEquals... c b b. listTake.. listCount..... i..
strIsEmpty listIsEmpty.
strIsNotEmpty b not. strIsEmpty..
strHead listHead.
strTail listTail.
strEmpty ListEmpty.
straddFront listAddFront.
straddBack listAddBack.
strCons listConcat.
strSkip listSkip.
strTake listTake.
strReturn listReturn.
strWhere listWhere.
strLength listCount.
strStartsWith listStartsWith isEQ..
listJoin c b b. c i. ListEmpty... b c b c. c foldl.... b b listConcat.. c listConcat.....
strJoin s b b. c b if. strIsEmpty.. strEmpty... c b b. s b foldl. listTail.. listHead... b b strCons.. c strCons.....
strConss c strJoin. ""..
LabeledVertex b c. c i...
LabeledVertex_Dispatch b k. c i...
LabeledTree_ID c i. k k 0....
LabeledBinLeaf b b k.. c i...
LabeledBinLeaf_Dispatch c b b. b c. c i.... b k. b k. k....
LabeledBinVertex b b b k... b b c.. b c. c i.....
LabeledBinVertex_Dispatch c b c. b c i.. k....
LabeledBinTree_ID c c i. k 0... k k k 1.....
LabeledOrderedBinLeaf b b k.. c i...
LabeledOrderedBinLeaf_Dispatch c b b. b c. c i.... b k. b k. b k. k.....
LabeledOrderedBinVertex b b b b k.... b b b c... b b c.. b c. c i......
LabeledOrderedBinVertex_Dispatch c b c. b c i.. k....
LabeledOrderedBinTree_ID c c i. k 0... k k k k 1......
RBTreeLeaf b k. k..
RBTreeLeaf_Dispatch c b s. b b c.. c b b. b c. c i.... b k. b k. b k. k....... b k. b k. b k. k.....
RBTreeNodeRed b b b b k.... b b b b b k..... b b b c... b b c.. b c. c i.......
RBTreeNodeRed_Dispatch c b s. b b c.. c b c. c i...... b k. b k. b k. k.....
RBTreeNodeBlack b b b b k.... b b b b k.... b b b c... b b c.. b c. c i.......
RBTreeNodeBlack_Dispatch c b c. s b c. c i... b k. b k. b k. k.......
RBTree_ID c c c i. 0.. k k k k 1...... k k k k 2......
nats0 unfold Zero. Succ..
nats unfold one. Succ..
zeroes repeat 0..
byteVals listTake nats0. 256..
toBinSeq c b listMap. c b listTakeWhile. c unfold. c div. 2.... b not. isZero.... c mod. 2...
fromBinSeq c c b foldl. c c listZip. nats0.. c b b. mul.. pow 2..... 0.. add..
xor b b fromBinSeq.. c b c. c b c. c b b. b listZipLonger. toBinSeq... toBinSeq... 0... c b c. b b mod.. add... 2....
isUpperCaseLetter s b and. c isGT. 64... c isLT. 91...
isLowerCaseLetter s b or. s b and. c isGT. 96... c isLT. 123.... c isEQ. 95...
isAlpha s b or. isUpperCaseLetter.. isLowerCaseLetter..
alpha strWhere byteVals. isAlpha..
isNum s b and. c isGT. 47... c isLT. 58...
num strWhere byteVals. isNum..
isAlphaNum s b or. isAlpha.. isNum..
isWhiteSpace c isLT. 34..
whiteSpace strWhere byteVals. isWhiteSpace..
newLine straddFront strReturn 10.. 13..
toUpperCaseLetter s s b if. isLowerCaseLetter.. c add. 32... i..
toLowerCaseLetter s s b if. isUpperCaseLetter.. c sub. 32... i..
toUpperCaseString c listMap. toUpperCaseLetter..
toUpperCaseString c listMap. toLowerCaseLetter..
toUpperCaseFirstLetter s b ListCons. b toUpperCaseLetter. strHead... strTail..
toLowerCaseFirstLetter s b ListCons. b toLowerCaseLetter. strHead... strTail..
halt y c b s. c b c. c if... i... i...
fak c c b foldl. listTake nats... one.. mul..
_nextCandids b c listWhere.. b b not.. b b isZero.. c mod.....
_primes y c b s. b b s ListCons... c b b. b.. c _nextCandids..... listHead...
primes _primes listSkip nats. one...
fibs y c b listAddFront. c b listAddFront. c s listZip. listTail.. add... 1... 1...
xstrFromNat y b s b s. c b if. isZero..... c b c. b b s.. c b b. b.. c b b. straddFront.. b add 48.. c mod. 10....... c div. 10.....
strFromN s c b if. isZero.. strReturn 48... xstrFromNat strEmpty...
strFromNs c listBind. c b straddBack. strFromN.. 32...
strToN c c foldl. 0.. c b b. b add. c mul. 10.... c sub. 48....
strFromB c c if. "True".. "False"..
strFromS b strConss. b ListCons strReturn 96... c ListCons. ListCons strReturn 96.. ListEmpty.....
strFromPair b b b strConss... b b b ListCons "(".... c b b. b s. b b ListCons.. c b. fst..... b b ListCons " ; "... c b c. b b ListCons.. c b. snd.... ListCons ")". ListEmpty.......
listCutAt y b s b s. s b c. b b if.. s b b. b or. listIsEmpty... b c i.. listHead..... Pair ListEmpty..... c b s. b b c.. b b b changeFst... c b. listTail..... b ListCons. listHead.....
strFromSS c c foldl. strEmpty.. c b b. strCons.. c straddBack. 10....
xlistSplitAt c b b. b unfold. c listCutAt. k True..... c b c. b b changeSnd.. c b listCutAt. snd..... c listSkip. one....
listSplitAt c b c. b b listBind.. c b c. b b listCutAt.. c b c. b b listSkip.. xlistSplitAt... one.... b listIsEmpty. snd..... b listReturn. snd...
listContains c b b. b b. listAny... c i...
strContains c b c. listContains.. isEQ..
listRepeat c b c. b b listBind.. c b listTake. repeat..... i..
strBurst c listMap. listReturn..
strTrim b reverse. c b listSkipWhile. b reverse. c listSkipWhile. isWhiteSpace.... isWhiteSpace...
strCutAt listCutAt.
Just b b k.. c i...
Just_Dispatch b c. c i...
Nothing k i..
Nothing_Dispatch c b c. b c i.. k....
Maybe_ID c c i. k 0... 1..
maybeReturn Just.
maybeNothing Nothing.
maybeHasValue Just_Dispatch k True.. False..
maybeGetValue Just_Dispatch i. i..
maybeBind c c. Nothing..
maybeMap c b c. c b. b Just.... Nothing..
maybeAlternative s i. k..
maybeTryGetValue c i. i..
strFromMaybe c b c. b c i.. b strCons "Just "..... "Nothing"..
ParseResultFail k.
ParseResultFail_Dispatch c b b. b c. c i.... b k. k...
ParseResult b b k.. b c. c i....
ParseResult_Dispatch c b c. c i....
ParseResult_ID c c i. 0.. k k 1....
parseReturn c ParseResult..
parseFail k ParseResultFail..
parseOperation b c c i. ParseResultFail... c b b. ParseResult....
parseBindOperation c b b. parseOperation...
parsePipe c b b. b c. c c. ParseResultFail.... c..
parseBind b c b b. b c. c c. ParseResultFail..... b b. b c. b parseOperation.....
parseBindDiscard parseBind k..
parseBindOverride parseBind k i...
parseBindPair parseBind Pair..
parseCharIf c b s. c b s. b b if.. b s b and. b not. listIsEmpty.... c b. listHead..... s b parseReturn. listHead.. listTail.... parseFail..
parseCharX b parseCharIf. c b c. listContains.. isEQ...
parseChar b parseCharIf. isEQ..
parseSingle parseCharIf k True...
parseString c c b foldl. c listMap. parseChar... parseReturn strEmpty... parseBind straddBack...
parseUntil b b s b parseReturn. fst.. snd... c listCutAt...
parseWhile b parseUntil. b not...
parseWhileMinOne b s c b s. b c b if. b listIsEmpty. ParseResult_Dispatch k i.. ""..... parseFail... i... parseWhile..
parseOption c b c. b b c.. s... ParseResult..
parseOptions y b c b b. c i. ParseResultFail.... c b c. b b c.. b b b c... b s b c. b b b.. c i..... c..... ParseResult....
parseWhitespace parseWhile isWhiteSpace..
parseWithWhitespace c b parseBindDiscard. parseBindOverride parseWhitespace... parseWhitespace..
parseToken parseBind c straddFront.. parseCharIf isAlpha.. parseWhile isAlphaNum...
parsenumber parseBindOperation parseWhileMinOne isNum.. strToN..
parseAccept b c c i. Nothing... c b c. b b c.. c b c. b b b.. b if.... Just.... Nothing...
parseAcceptAll parseAccept k True...
parseAcceptFullyConsumed parseAccept listIsEmpty..
parseWhilesuccessful y b s b c. c s. c ParseResult. ListEmpty..... c b c. b b c.. b b b b... c b c. b c... ParseResultFail..... b c b b. ParseResult... ListCons.....
mapCreate c Pair. ListEmpty..
mapGetAll s b b. b listWhere. snd... c b c. b b b.. fst... fst...
mapHasKey c b c. b b listAny.. mapGetAll... k True...
mapCount b listCount. snd..
mapadd c b b. b b. changeSnd... b b ListCons.. Pair...
mapRemove s b b. changeSnd.. b b c listWhere... b b b not... c b c. b b b.. fst... fst.....
mapSet c b s. b b mapadd.. mapRemove... i..
mapGet b b snd.. b b listHead.. mapGetAll...
idfCreate mapCreate.
idfHandle s b s. s b s. b b if.. mapHasKey... s b b. Pair.. mapGet.... s b c. c b c. b b s.. b b b Pair... mapadd.... i... mapCount...
idfHandleX c b c. b c foldl.. c Pair. ListEmpty.... s b b. b s b Pair. fst... c b b. b listAddBack. snd... snd.... b idfHandle. fst....
idfCount mapCount.
listDistinct b b snd.. c b c. c b b. foldl.. c b Pair. idfCreate.. ListEmpty.... s b s. b b s b Pair. fst.... s b c. b b c.. s b b. b c. b b if.. b c b isEQ. snd... b idfCount. fst...... b listAddBack. snd..... snd.... b idfHandle. fst.....
newLine strReturn 10..
empty strReturn 32..
diff s b s. s b s. b b if.. isLT... c sub.... sub..
gDrawL c b b. b b. b listBind. listTake nats0..... c c...
gDraw b c b b. b listBind. listTake nats0..... c b c. b b c.. b b b listConcat... b c. gDrawL..... newLine...
gCanvas k k empty...
gOverlay b b s.. b b b s... c b b. b c. b b c.. b b if...... listReturn....
gPixel b b gOverlay.. c b b. b c. b b b.. b b and.. c isEQ...... c isEQ....
gCircle b b b gOverlay... b b c b b. b b. b isGT. c pow. 2....... c b b. b c. b b b.. b b add.. c b c. b b pow.. c diff.... 2...... c b c. b b pow.. c diff.... 2.....
beanEmpty k Nothing..
beanSet c b c. b b s.. c b b. b c. b b if.. strEquals.... Just.....
beanTryGet i.
beanGet b maybeGetValue..
beanHas b maybeHasValue..
seqEmpty Pair 0. i..
seqLength fst.
seqGet snd.
seqSet c b b. b b. changeSnd... b b s.. b c. b b if.. isEQ.....
seqaddFront s b b. b Pair. b Succ. seqLength.... b c b s. c b if. isZero..... c b b. seqGet.. pred....
seqaddBack s b b. b Pair. b Succ. seqLength.... s b c. b b s.. b c. b b if.. b c isEQ.. seqLength...... seqGet...
seqConcat s b s. b b Pair.. c b b. b add. seqLength... seqLength.... s b b. b s. s b s. b b if.. b c isLT.. seqLength.... seqGet.... b c b b. seqGet... b c sub.. seqLength.....
seqRangeUnsafe b b c Pair... c b b. b b. seqGet... c sub....
seqRange s b s. b b b.. seqRangeUnsafe... b b c min... b sub. seqLength....
seqToList s b listMap. b listTake nats0.. seqLength... seqGet..
listToSeq c c foldr. seqEmpty.. seqaddFront..
listHeadOrDefault s b c. b if. listIsEmpty... listHead..
_switchCond c b c. b b b.. foldr... b c. c b s. b b if.. c b. fst.... snd....
switchCond c b c. _switchCond...
switch b c. b b switchCond.. c i....
switchN c b c. switch.. isEQ..
getFirstConsumeMoreDeferred b c i.. s b y. c b b. b s. c b if. isZero..... b b k.. c b. pred.......
getFirstConsumeMore b getFirstConsumeMoreDeferred. k..
_eCharBrOpen strHead "("..
_eCharBrClose strHead ")"..
_eCharSqBrOpen strHead "["..
_eCharSqBrClose strHead "]"..
_eCharComma strHead ","..
_eCharAbstr strHead "\"..
_eCharOr strHead "|"..
_eCharAnd strHead "&"..
_eCharAssign 61.
_eCharComment 39.
_eStrColon strReturn 58..
_eIsQuot s b or. c isEQ. 34... c isEQ. 96...
_eIsNewLine s b or. c isEQ. 10... c isEQ. 13...
ScharParenOpen b k. b k. b k. b k. b k. b k. k.......
ScharParenOpen_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. b c. c i..... i.... i.... i.... i.... i.... i..
ScharParenClose k b k. b k. b k. b k. b k. k.......
ScharParenClose_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. c i...... i.... i.... i.... i.... i.... i..
ScharAbstraction k k b k. b k. b k. b k. k.......
ScharAbstraction_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. c i... i...... i.... i.... i.... i.... i..
ScharAssign k k k b k. b k. b k. k.......
ScharAssign_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. c i... i... i...... i.... i.... i.... i..
ScharSqBracketOpen k k k k b k. b k. k.......
ScharSqBracketOpen_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. s b c. c i... i... i... i...... i.... i.... i..
ScharSqBracketClose k k k k k b k. k.......
ScharSqBracketClose_Dispatch c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. s b c. s b c. c i... i... i... i... i...... i.... i..
ScharComma k k k k k k k.......
ScharComma_Dispatch c b s. b b c.. c b c. s b c. s b c. s b c. s b c. s b c. c i... i... i... i... i... i...... i..
ScharSingleOr k k k k k k k i........
ScharSingleOr_Dispatch c b c. s b c. s b c. s b c. s b c. s b c. s b c. c i... i... i... i... i... i... i....
Schar_ID c c c c c c c c i. 0.. 1.. 2.. 3.. 4.. 5.. 6.. 7..
scharEQ c b b. b isEQ. Schar_ID... Schar_ID..
schar_String c c c c c c c c i. "<PAR_OPEN>".. "<PAR_CLOSE>".. "<ABSTRACT>".. "<ASSIGN>".. "<SQBR_OPEN>".. "<SQBR_CLOSE>".. "<COMMA>".. "<SINGLE_OR>"..
TokenSpecialChar b b k.. b b k.. b b k.. b b k.. b b k.. c i.......
TokenSpecialChar_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b b. b c. c i.... k.... k.... k.... k.... k..
TokenLiteralLower b k. b b k.. b b k.. b b k.. b b k.. c i.......
TokenLiteralLower_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. b c i.. k...... k.... k.... k.... k..
TokenLiteralUpper b k. b k. b b k.. b b k.. b b k.. c i.......
TokenLiteralUpper_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. b c i.. k... k...... k.... k.... k..
TokenConstS b k. b k. b k. b b k.. b b k.. c i.......
TokenConstS_Dispatch c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. b c i.. k... k... k...... k.... k..
TokenConstN b k. b k. b k. b k. b b k.. c i.......
TokenConstN_Dispatch c b s. b b c.. c b c. s b c. s b c. s b c. b c i.. k... k... k... k...... k..
TokenComment b k. b k. b k. b k. b k. c i.......
TokenComment_Dispatch c b c. s b c. s b c. s b c. s b c. b c i.. k... k... k... k... k....
Token_ID c c c c c c i. k 0... k 1... k 2... k 3... k 4... k 5...
tokenLiteral s s b if. b isLowerCaseLetter. strHead... TokenLiteralLower.. TokenLiteralUpper..
token_String c c c c c c i. schar_String.. b strConss. b ListCons "<LITERALL(".. c ListCons. ListCons ")>". ListEmpty...... b strConss. b ListCons "<LITERALU(".. c ListCons. ListCons ")>". ListEmpty...... b strConss. b ListCons "<CONSTS(".. c ListCons. ListCons ")>". ListEmpty...... b strConss. b ListCons "<CONSTN(".. c b ListCons. strFromN.. ListCons ")>". ListEmpty...... k "<COMMENT>"...
token_String_list c b strJoin. c listMap. token_String... " "..
eatParenOpen parseBindOperation parseChar _eCharBrOpen.. k TokenSpecialChar ScharParenOpen....
eatParenClose parseBindOperation parseChar _eCharBrClose.. k TokenSpecialChar ScharParenClose....
eatSqBracketOpen parseBindOperation parseChar _eCharSqBrOpen.. k TokenSpecialChar ScharSqBracketOpen....
eatSqBracketClose parseBindOperation parseChar _eCharSqBrClose.. k TokenSpecialChar ScharSqBracketClose....
eatComma parseBindOperation parseChar _eCharComma.. k TokenSpecialChar ScharComma....
eatAbstraction parseBindOperation parseChar _eCharAbstr.. k TokenSpecialChar ScharAbstraction....
eatAssign parseBindOperation parseChar _eCharAssign.. k TokenSpecialChar ScharAssign....
eatSingleOr parseBindOperation parseChar _eCharOr.. k TokenSpecialChar ScharSingleOr....
eatLiteral parseBindOperation parseToken. tokenLiteral..
eatConstS parseBindOperation parseBindOverride parseCharIf _eIsQuot.. parseBindDiscard parseUntil _eIsQuot.. parseCharIf _eIsQuot.... TokenConstS..
eatConstN parseBindOperation parsenumber. TokenConstN..
eatComment parseBindOperation parseBindOverride parseChar _eCharComment.. parseUntil _eIsNewLine... TokenComment..
eatSpecialChar parseOptions ListCons eatParenOpen. ListCons eatParenClose. ListCons eatAbstraction. ListCons eatAssign. ListCons eatSqBracketOpen. ListCons eatSqBracketClose. ListCons eatComma. ListCons eatSingleOr. ListEmpty..........
eatSomething parseWithWhitespace parseOptions ListCons eatSpecialChar. ListCons eatLiteral. ListCons eatConstS. ListCons eatConstN. ListCons eatComment. ListEmpty........
token_Process b parseAcceptFullyConsumed. parseWhilesuccessful eatSomething...
token_Run b strFromMaybe i.. c b maybeMap. token_Process.. token_String_list...
SyntaxName b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. c i.........
SyntaxName_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b b. b c. c i.... k.... k.... k.... b k. k..... b k. k..... b k. k..... b k. k...
SyntaxConstN b k. b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. c i.........
SyntaxConstN_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. b c i.. k...... k.... k.... b k. k..... b k. k..... b k. k..... b k. k...
SyntaxConstS b k. b k. b b k.. b b k.. b b k.. b b k.. b b k.. c i.........
SyntaxConstS_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. b c i.. k... k...... k.... b k. k..... b k. k..... b k. k..... b k. k...
SyntaxList b k. b k. b k. b b k.. b b k.. b b k.. b b k.. c i.........
SyntaxList_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. b c i.. k... k... k...... b k. k..... b k. k..... b k. k..... b k. k...
SyntaxAbstraction b b k.. b b k.. b b k.. b b k.. b b b k... b b b k... b b b k... b c. c i..........
SyntaxAbstraction_Dispatch c b s. b b c.. c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. s b c. b c i.. k... k... k... k...... b k. k..... b k. k..... b k. k...
SyntaxApplication b b k.. b b k.. b b k.. b b k.. b b k.. b b b k... b b b k... b c. c i..........
SyntaxApplication_Dispatch c b s. b b c.. c b s. b b c.. c b c. s b c. s b c. s b c. s b c. b c i.. k... k... k... k... b k. k....... b k. k..... b k. k...
SyntaxAssignment b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. b b b k... b c. c i..........
SyntaxAssignment_Dispatch c b s. b b c.. c b c. s b c. s b c. s b c. s b c. s b c. b c i.. k... k... k... k... b k. k.... b k. k....... b k. k...
SyntaxType b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. b b k.. b c. c i..........
SyntaxType_Dispatch c b c. s b c. s b c. s b c. s b c. s b c. s b c. b c i.. k... k... k... k... b k. k.... b k. k.... b k. k.....
SyntaxExpression_ID c c c c c c c c i. k 0... k 1... k 2... k 3... k k 4.... k k 5.... k k 6.... k k 7....
syntaxCreateApplication c s b foldl. listTail.. listHead.. SyntaxApplication..
syntaxCreateAbstraction c b c. foldr.. c SyntaxAbstraction...
syntax_String y c b c. s b c. s b c. s b c. b c c c c i. b strConss. b ListCons "literal(".. c ListCons. ListCons ")". ListEmpty...... b strConss. b ListCons "constn(".. c b ListCons. strFromN.. ListCons ")". ListEmpty...... b strConss. b ListCons "consts(".. c ListCons. ListCons ")". ListEmpty....... b b strConss.. b b ListCons "list("... c b c. b b ListCons.. c b c. b b strJoin.. c listMap.... ", ".... ListCons ")". ListEmpty....... b b b strConss... b b b ListCons "abstract(".... b c b b. ListCons... b b ListCons ", "... c b c. b ListCons... ListCons ")". ListEmpty......... b b b strConss... b b b ListCons "apply(".... s b c. b b b.. b ListCons.... b b ListCons ", "... c b c. b ListCons... ListCons ")". ListEmpty......... b b b strConss... b b b ListCons "assign(".... b c b b. ListCons... b b ListCons ", "... c b c. b ListCons... ListCons ")". ListEmpty......... b b strConss.. b b ListCons "type("... c b b. ListCons.. b ListCons "; ".. c b ListCons. c b strJoin. c listMap. s b strCons. fst.. b strConss. c b listMap. snd.. strCons " "....... ", "... ListCons ")". ListEmpty.........
syntax_String_list c b strJoin. c listMap. syntax_String... "; "..
cstrParseAbstractionTail b parsePipe parseSingle.. c b TokenLiteralLower_Dispatch. c b b. parseBindOperation.. b b listReturn.. SyntaxAbstraction.... parseFail...
cstrParseSChar b parsePipe parseSingle.. c b TokenSpecialChar_Dispatch. c b c. c b c. b b if.. scharEQ... parseReturn i.... parseFail... parseFail...
cstrParseLiteralL parsePipe parseSingle. TokenLiteralLower_Dispatch parseReturn. parseFail...
cstrParseLiteralU parsePipe parseSingle. TokenLiteralUpper_Dispatch parseReturn. parseFail...
cstrParseCloseParen cstrParseSChar ScharParenClose..
cstrParseCloseSqBr cstrParseSChar ScharSqBracketClose..
cstrParseComma cstrParseSChar ScharComma..
cstrParseAssign cstrParseSChar ScharAssign..
cstrParseSingleOr cstrParseSChar ScharSingleOr..
cstrParseListTail c b parseBindDiscard. c b parseBindOperation. s parseBind ListCons.. b parseWhilesuccessful. parseBindOverride cstrParseComma..... b listReturn. SyntaxList.... cstrParseCloseSqBr..
cstrParseAssignTail b c b parseBindOperation. parseBindOverride cstrParseAssign.... b b listReturn.. SyntaxAssignment...
cstrParseDataDefOption parseBind Pair. cstrParseLiteralU. parseWhilesuccessful cstrParseLiteralL...
cstrParseDataDefTail2 parseBind ListCons. cstrParseDataDefOption. parseWhilesuccessful parseBindOverride cstrParseSingleOr. cstrParseDataDefOption....
cstrParseDataDefTail b k. b parseBindOperation parseBindOverride cstrParseAssign. cstrParseDataDefTail2... b b listReturn.. SyntaxType....
cstrSyntaxSingle b parsePipe parseSingle.. c b c. c b c. c b c. s b c. s b c. b c i.. c b c. c b c. c b c. s b c. c b c. s b c. c b c. b c i.. c b parseBindDiscard. c parseBindOperation. listReturn... cstrParseCloseParen.... parseFail... cstrParseAbstractionTail... parseFail... cstrParseListTail... parseFail... parseFail... parseFail.... c b s. b b parseOption.. c cstrParseAssignTail.... b parseReturn. b listReturn. SyntaxName...... c b s. b b parseOption.. c cstrParseDataDefTail.... b parseReturn. b listReturn. SyntaxName...... b parseReturn. b listReturn. SyntaxConstS..... b parseReturn. b listReturn. SyntaxConstN..... k parseReturn. ListEmpty....
cstrSyntaxApplication c b parsePipe. b parseWhilesuccessful. cstrSyntaxSingle... b s c b if. listIsEmpty.. parseFail.. b parseReturn. c s b foldl. listTail.. listHead.. SyntaxApplication.... c listBind. i....
cstrSyntaxEverything parseWhilesuccessful y cstrSyntaxApplication...
syntax_Process b parseAcceptFullyConsumed. cstrSyntaxEverything..
syntax_Run b strFromMaybe i.. c b maybeMap. c b maybeBind. token_Process.. syntax_Process... syntax_String_list...
NativeAssignment b c. c i...
NativeAssignment_Dispatch b k. c i...
NativeDefinition_ID c i. k k 0....
NativeLiteral b b k.. b b k.. b b k.. c i.....
NativeLiteral_Dispatch c b s. b b c.. c b s. b b c.. c b b. b c. c i.... k.... k.... b k. k...
NativeConstN b k. b b k.. b b k.. c i.....
NativeConstN_Dispatch c b s. b b c.. c b s. b b c.. c b c. b c i.. k...... k.... b k. k...
NativeConstS b k. b k. b b k.. c i.....
NativeConstS_Dispatch c b s. b b c.. c b c. s b c. b c i.. k... k...... b k. k...
NativeApplication b b k.. b b k.. b b k.. b c. c i......
NativeApplication_Dispatch c b c. s b c. s b c. b c i.. k... k... k....
NativeExpression_ID c c c c i. k 0... k 1... k 2... k k 3....
getCollisionFreeLiteral strCons ":arg:"..
nativeExpr_String y b c c c c i. b strConss. b ListCons "literal(".. c ListCons. ListCons ")". ListEmpty...... b strConss. b ListCons "constn(".. c b ListCons. strFromN.. ListCons ")". ListEmpty...... b strConss. b ListCons "consts(".. c ListCons. ListCons ")". ListEmpty....... b b b strConss... b b b ListCons "apply(".... s b c. b b b.. b ListCons.... b b ListCons ", "... c b c. b ListCons... ListCons ")". ListEmpty.........
nativeDef_String c i. b b strConss.. b b ListCons "assign("... c b b. ListCons.. b ListCons ", ".. c b ListCons. nativeExpr_String.. ListCons ")". ListEmpty........
nativeDef_String_list c b strJoin. c listMap. nativeExpr_String... "; "..
nativeExpr_String_list c b strJoin. c listMap. nativeDef_String... "; "..
nativeI NativeLiteral ":bound:i"..
nativeK NativeLiteral ":bound:k"..
nativeB NativeLiteral ":bound:b"..
nativeC NativeLiteral ":bound:c"..
nativeS NativeLiteral ":bound:s"..
nativeY NativeLiteral ":bound:y"..
nativeListEmpty NativeLiteral "ListEmpty"..
nativeListCons NativeLiteral "ListCons"..
isNativeLiteral c b NativeLiteral_Dispatch. strEquals.. False..
nativeContainsLit y b c b s. c b c. c b c. c b. strEquals... k False.... k False..... s b s. b b c.. b b b b... b b b or... c..... c....
finalizeLiteral s s b if. c strStartsWith. ":bound:"... c strSkip. 7... i..
finalizeNativeExpr y b c s s c i. b NativeLiteral. finalizeLiteral... k.. k... s b c. b b b.. b s b s. c b c. b b s.. c b b. b b. b if. isNativeLiteral "y"..... c s b NativeApplication_Dispatch. c b c. b if. isNativeLiteral "k"...... i...... i... NativeApplication..... i....
finalizeNativeDefs c i. c b b. NativeAssignment.. finalizeNativeExpr...
_syntaxToNative y c b c. c b c. s b c. s b c. b c c c c i. NativeLiteral.. NativeConstN.. NativeConstS... b c c foldr. nativeListEmpty... b c. b b NativeApplication.. b NativeApplication nativeListCons........ c b b. y c b c. b b s.. c b s. b b s.. b b b NativeApplication_Dispatch... s b s. b b b.. b b s.. b b b s... b s b s. b b b.. b b if.. c nativeContainsLit...... s b s. b b s.. b b b s... b s b b. b s. b b if.. c nativeContainsLit...... s b s. b b c.. b b b b... b b b NativeApplication... b b NativeApplication nativeS........ i...... b b b NativeApplication... b b NativeApplication nativeC........... c b c. b b b.. b b c.. b b b c... b s b b. b s. b b if.. c nativeContainsLit...... b b s b s. c b if. NativeLiteral_Dispatch k True.. False....... b c b b. b NativeApplication. NativeApplication nativeB............ NativeApplication nativeK....... c b s. c b c. b b if.. c nativeContainsLit.... nativeI... NativeApplication nativeK...... i....... s b c. b b b.. b NativeApplication.... i.... k k NativeAssignment "fail". NativeConstS "fail"....... k NativeAssignment "fail". NativeConstS "fail"......
_createUniqueNameFromN b strCons ":bound:".. strFromN..
_createUniqueNameFromS strCons ":bound:"..
_syntaxEmitTypeInstance b c b s. b b c.. b b b s... b b b b ListCons.... b b b c NativeAssignment.... b b b _syntaxToNative... c b b. b s. b b syntaxCreateAbstraction.. c listConcat..... b b syntaxCreateApplication.. c b c. b b listMap.. b c listAddFront.. _createUniqueNameFromN.... SyntaxName........... c b c. b b c.. b b b ListCons... b b c b NativeAssignment. c strCons. "_Dispatch"..... b b _syntaxToNative.. c b c. c b c. c b c. b b s b s. b b s.. b b b syntaxCreateAbstraction... c b b. b b. ListCons... c b b. ListCons.. c ListCons. ListEmpty......... b b b b b syntaxCreateApplication..... b b b b c b ListCons. SyntaxName...... c b b. b b. b b. listMap.... c b c. b b b.. b b s.. c b b. b c. b b if.. c b b. isEQ.. snd..... SyntaxName..... b c b syntaxCreateAbstraction. b snd. fst.... SyntaxName........ _createUniqueNameFromS "disp".... _createUniqueNameFromS "alt".... _createUniqueNameFromS "item"........ ListEmpty...
_syntaxEmitTypeStuff b s b c. b b listConcat.. s b b. listBind.. c b c. b b s.. c b c. b b b.. c b c. b b s.. b b b c... c b c. b b b.. b b c.. _syntaxEmitTypeInstance.... snd..... fst.... fst.... snd...... c b c. b b ListCons.. c b b. b NativeAssignment. c strCons. "_ID".... b _syntaxToNative. c b s SyntaxAbstraction.. b b syntaxCreateApplication.. b c b ListCons. SyntaxName... c listMap. s b syntaxCreateAbstraction. b snd. fst... b SyntaxConstN. snd....... _createUniqueNameFromS "item"....... ListEmpty...
_syntaxToNativeDefs c c c c c c c c i. k ListEmpty... k ListEmpty... k ListEmpty... k ListEmpty... k k ListEmpty.... k k ListEmpty.... b b listReturn.. s b b. NativeAssignment.. b b NativeApplication nativeY... b b _syntaxToNative.. SyntaxAbstraction...... c b s. c b b. c b b. b c. _syntaxEmitTypeStuff... c b listMap. listTake nats0... _createUniqueNameFromN.... listCount... c c listZip. nats0.. Pair....
syntaxToNative c b listMap. _syntaxToNativeDefs.. finalizeNativeDefs..
nativeExprToExe y b c c c c i. i.. strFromN.. c b straddBack. c straddFront. 34... 34.... b b b strConss... s b c. b b b.. b ListCons.... b b ListCons " "... c b c. b ListCons... ListCons ".". ListEmpty........
nativeDefToExe b strConss. c b ListCons. c i. b b strConss.. c b b. ListCons.. b ListCons " ".. c b ListCons. nativeExprToExe.. ListEmpty....... ListCons ".". ListCons newLine. ListEmpty.....
nativeToObj y b s b c. s b c. s b c. b c i.. s b c. b b Pair.. b maybeGetValue.... i.... c Pair.... c Pair..... c b s. b b c.. b b b c... b b b b Pair.... s b s. b b c.. b b b b... b b fst...... b b fst........ i....
native_Run b strFromMaybe i.. c b maybeMap. c b maybeMap. c b maybeBind. token_Process.. syntax_Process... c listBind. syntaxToNative.... c b strJoin. c listMap. nativeDefToExe... "; "....
native_Process b maybeReturn. c listBind. syntaxToNative...
output_Process b strConss. c listMap. nativeDefToExe...
pipe c b maybeTryGetValue. c b maybeMap. c b maybeBind. c b maybeBind. token_Process.. syntax_Process... native_Process... output_Process... ""..
fullDebug b strConss. b ListCons newLine.. b ListCons newLine.. s b ListCons. token_Run.. b ListCons newLine.. b ListCons newLine.. s b ListCons. syntax_Run.. b ListCons newLine.. b ListCons newLine.. c b ListCons. native_Run.. ListCons newLine. ListCons newLine. ListEmpty.............
run2 b c b maybeMap. c b maybeBind. token_Process.. syntax_Process.... b b fst.. c b b. nativeToObj.. b _syntaxToNative. listHead.....
evalnumber parseWithWhitespace parsenumber..
evalProduct y c b parseOption. b parseBind mul. evalnumber.. parseBindOverride parseChar strHead "*"...... evalnumber...
evalSum y c b parseOption. b parseBind add. evalProduct.. parseBindOverride parseChar strHead "+"...... evalProduct...
eval b strFromN. c b maybeTryGetValue. b parseAcceptFullyConsumed. evalSum... 1337...
million mul 1000. 1000..
millionS strFromN million..
testCount 83.
test0 True.
test1 i True..
test2 k True. False..
test3 s k i.. i. True..
test4 not False..
test5 b not. not. True..
test6 or True. False..
test7 not or False. False...
test8 and True. True..
test9 not and True. False...
test10 implies False. False..
test11 implies False. True..
test12 implies True. True..
test13 not implies True. False...
test14 eq False. False..
test15 eq True. True..
test16 isZero 0..
test17 not isZero 1...
test18 isEQ 42. 42..
test19 not isEQ 42. 43...
test20 isEQ 1. Succ 0...
test21 isEQ 43. add 23. 20...
test22 isEQ 69. mul 3. 23...
test23 isEQ 32. pow 2. 5...
test24 isEQ 31. pred 32...
test25 isEQ 65. sub 101. 36...
test26 isEQ 3. div 63. 16...
test27 isEQ 3. mod 91. 4...
test28 isLTE 3. 3..
test29 isLTE 3. 4..
test30 not isLTE 3. 2...
test31 isGTE 4. 3..
test32 isLT 3. 4..
test33 not isLT 3. 3...
test34 isGT 4. 3..
_test35f Pair 45. 23..
test35 isEQ 45. fst _test35f...
test36 isEQ 23. snd _test35f...
_test37f "Aa".
test37 listIsNotEmpty _test37f..
test38 not listIsEmpty _test37f...
test39 isEQ 65. listHead _test37f...
test40 isEQ 97. b listHead. listTail. _test37f...
_test41f listAddFront ListEmpty. 66..
test41 isEQ 66. listHead _test41f...
test42 isEQ 2. listCount _test37f...
test43 isEQ 97. b listHead. reverse. _test37f...
test44 isEQ 3. listCount listConcat _test37f. _test41f....
test45 isEQ 1. listCount listReturn 32....
test46 isEQ 3. listCount listAddBack _test37f. 49....
test47 strEquals _test37f. "Aa"..
test48 not strEquals _test37f. "AA"...
test49 strEquals "asd". listTake "asdqwe". 3...
test50 strEquals "asd". listTakeWhile "asdqwe". b not. c isEQ. listHead "q"......
test51 strEquals "bte". listMap "asd". Succ...
test52 strEquals "ade". listWhere "asdqwe". c isLTE. listHead "e".....
test53 strEquals "qwe". listSkip "asdqwe". 3...
test54 strEquals "qwe". listSkipWhile "asdqwe". b not. c isEQ. listHead "q"......
test55 listAny "qwe". c isEQ. listHead "w"....
test56 not listAny "asd". c isEQ. listHead "w".....
test57 listAll "qwe". c isGT. 65...
test58 not listAll "qwe". c isGT. 110....
test59 strEquals "bte". listZip "asd". repeat 1.. add...
test60 isEQ 65. listElementAt "asdAqwe". 3...
test61 isEQ 1. listHead nats...
test62 isEQ 0. listHead nats0...
test63 isEQ 0. listHead byteVals...
test64 isEQ 256. listCount byteVals...
test65 isEQ 435. xor 123. 456...
test66 isAlpha 65..
test67 not isAlpha 64...
test68 isNum listHead "0"...
test69 not isNum listHead "a"....
test70 isAlphaNum listHead "a"...
test71 isAlphaNum listHead "0"...
test72 not isAlphaNum listHead "!"....
test73 isWhiteSpace listHead " "...
test74 not isWhiteSpace listHead "a"....
test75 isEQ 720. fak 6...
test76 strEquals "23". strFromN 23...
test77 strEquals "(12 ; 13)". strFromPair strFromN. strFromN. Pair 12. 13....
test78 strEquals "(asd ; qwe)". strFromPair i. i. listCutAt "asdqwe". c isEQ. listHead "q"......
test79 strContains "asd". listHead "s"...
test80 not strContains "asd". listHead "w"....
test81 strEquals "asd". strTrim "   asd   "...
test82 True.
tfac1 b snd. c Pair. 1...
tfac2 k 1..
tval1 tfac1 i..
tval2 tfac2 i..
tswitch c c switchN. ListCons Pair 0. "a".. ListCons Pair 1. "b".. ListCons Pair 2. "c".. ListCons Pair 3. "d".. ListCons Pair 4. "e".. ListEmpty....... "x"..
lengthyOp c c b if. b strIsEmpty. msgBox... i.. i..
calledOften1 lengthyOp.
calledOften2 c c lengthyOp...
scenario1 b foldl listTake nats. 5.. "0".. b b k.. b b calledOften1 "42"... strCons....
scenario2 b foldl listTake nats. 5.. "0".. b b k.. b b calledOften2 "42"... strCons....
ioRun b snd. c i. 0...
